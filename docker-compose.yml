# version: '3.9'

services:
  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --metrics.prometheus=true
      - --metrics.prometheus.addrouterslabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.headerlabels.label=headerKey
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./public/media:/media
    networks: # Connect to the 'web' network
      - web
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    restart: unless-stopped

  payload:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    env_file:
      - .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.payload.rule=Host(`77.223.214.122`)'
      - 'traefik.http.routers.payload-media.rule=PathPrefix(`/media`)'
      - 'traefik.http.routers.payload-media.entrypoints=web'
      - 'traefik.http.routers.payload.entrypoints=web'
      - 'traefik.http.services.payload.loadbalancer.server.port=3000'
      - 'traefik.http.middlewares.large-upload.headers.customrequestheaders.Content-Length=524288000'
      - 'traefik.http.routers.payload.middlewares=large-upload'
    networks:
      - web
    depends_on:
      - traefik
    volumes:
      - ./public/media:/app/public/media
      # - ./node_modules:/app/node_modules
    restart: unless-stopped

networks: # Create a network called 'web'
  web:
    external: false
