/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact' | 'specialHero' | 'productHero';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            appearance?: ('default' | 'outline' | 'ghost' | 'secondary') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
    heroGraphic?: (string | null) | Media;
    includeStoreLinks?: boolean | null;
  };
  layout: (
    | ArchiveBlock
    | CallToActionBlock
    | ContentBlock
    | FormBlock
    | MediaBlock
    | BusinessSliderBlock
    | HoverSliderBlock
  )[];
  meta?: {
    title?: string | null;
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  backgroundType?: ('color' | 'media') | null;
  sectionBackgroundColor?:
    | (
        | 'bg-inherit'
        | 'bg-current'
        | 'bg-transparent'
        | 'bg-black'
        | 'bg-white'
        | 'bg-slate-50'
        | 'bg-slate-100'
        | 'bg-slate-200'
        | 'bg-slate-300'
        | 'bg-slate-400'
        | 'bg-slate-500'
        | 'bg-slate-600'
        | 'bg-slate-700'
        | 'bg-slate-800'
        | 'bg-slate-900'
        | 'bg-slate-950'
        | 'bg-gray-50'
        | 'bg-gray-100'
        | 'bg-gray-200'
        | 'bg-gray-300'
        | 'bg-gray-400'
        | 'bg-gray-500'
        | 'bg-gray-600'
        | 'bg-gray-700'
        | 'bg-gray-800'
        | 'bg-gray-900'
        | 'bg-gray-950'
        | 'bg-zinc-50'
        | 'bg-zinc-100'
        | 'bg-zinc-200'
        | 'bg-zinc-300'
        | 'bg-zinc-400'
        | 'bg-zinc-500'
        | 'bg-zinc-600'
        | 'bg-zinc-700'
        | 'bg-zinc-800'
        | 'bg-zinc-900'
        | 'bg-zinc-950'
        | 'bg-neutral-50'
        | 'bg-neutral-100'
        | 'bg-neutral-200'
        | 'bg-neutral-300'
        | 'bg-neutral-400'
        | 'bg-neutral-500'
        | 'bg-neutral-600'
        | 'bg-neutral-700'
        | 'bg-neutral-800'
        | 'bg-neutral-900'
        | 'bg-neutral-950'
        | 'bg-stone-50'
        | 'bg-stone-100'
        | 'bg-stone-200'
        | 'bg-stone-300'
        | 'bg-stone-400'
        | 'bg-stone-500'
        | 'bg-stone-600'
        | 'bg-stone-700'
        | 'bg-stone-800'
        | 'bg-stone-900'
        | 'bg-stone-950'
        | 'bg-red-50'
        | 'bg-red-100'
        | 'bg-red-200'
        | 'bg-red-300'
        | 'bg-red-400'
        | 'bg-red-500'
        | 'bg-red-600'
        | 'bg-red-700'
        | 'bg-red-800'
        | 'bg-red-900'
        | 'bg-red-950'
        | 'bg-orange-50'
        | 'bg-orange-100'
        | 'bg-orange-200'
        | 'bg-orange-300'
        | 'bg-orange-400'
        | 'bg-orange-500'
        | 'bg-orange-600'
        | 'bg-orange-700'
        | 'bg-orange-800'
        | 'bg-orange-900'
        | 'bg-orange-950'
        | 'bg-amber-50'
        | 'bg-amber-100'
        | 'bg-amber-200'
        | 'bg-amber-300'
        | 'bg-amber-400'
        | 'bg-amber-500'
        | 'bg-amber-600'
        | 'bg-amber-700'
        | 'bg-amber-800'
        | 'bg-amber-900'
        | 'bg-amber-950'
        | 'bg-yellow-50'
        | 'bg-yellow-100'
        | 'bg-yellow-200'
        | 'bg-yellow-300'
        | 'bg-yellow-400'
        | 'bg-yellow-500'
        | 'bg-yellow-600'
        | 'bg-yellow-700'
        | 'bg-yellow-800'
        | 'bg-yellow-900'
        | 'bg-yellow-950'
        | 'bg-lime-50'
        | 'bg-lime-100'
        | 'bg-lime-200'
        | 'bg-lime-300'
        | 'bg-lime-400'
        | 'bg-lime-500'
        | 'bg-lime-600'
        | 'bg-lime-700'
        | 'bg-lime-800'
        | 'bg-lime-900'
        | 'bg-lime-950'
        | 'bg-green-50'
        | 'bg-green-100'
        | 'bg-green-200'
        | 'bg-green-300'
        | 'bg-green-400'
        | 'bg-green-500'
        | 'bg-green-600'
        | 'bg-green-700'
        | 'bg-green-800'
        | 'bg-green-900'
        | 'bg-green-950'
        | 'bg-emerald-50'
        | 'bg-emerald-100'
        | 'bg-emerald-200'
        | 'bg-emerald-300'
        | 'bg-emerald-400'
        | 'bg-emerald-500'
        | 'bg-emerald-600'
        | 'bg-emerald-700'
        | 'bg-emerald-800'
        | 'bg-emerald-900'
        | 'bg-emerald-950'
        | 'bg-teal-50'
        | 'bg-teal-100'
        | 'bg-teal-200'
        | 'bg-teal-300'
        | 'bg-teal-400'
        | 'bg-teal-500'
        | 'bg-teal-600'
        | 'bg-teal-700'
        | 'bg-teal-800'
        | 'bg-teal-900'
        | 'bg-teal-950'
        | 'bg-cyan-50'
        | 'bg-cyan-100'
        | 'bg-cyan-200'
        | 'bg-cyan-300'
        | 'bg-cyan-400'
        | 'bg-cyan-500'
        | 'bg-cyan-600'
        | 'bg-cyan-700'
        | 'bg-cyan-800'
        | 'bg-cyan-900'
        | 'bg-cyan-950'
        | 'bg-sky-50'
        | 'bg-sky-100'
        | 'bg-sky-200'
        | 'bg-sky-300'
        | 'bg-sky-400'
        | 'bg-sky-500'
        | 'bg-sky-600'
        | 'bg-sky-700'
        | 'bg-sky-800'
        | 'bg-sky-900'
        | 'bg-sky-950'
        | 'bg-blue-50'
        | 'bg-blue-100'
        | 'bg-blue-200'
        | 'bg-blue-300'
        | 'bg-blue-400'
        | 'bg-blue-500'
        | 'bg-blue-600'
        | 'bg-blue-700'
        | 'bg-blue-800'
        | 'bg-blue-900'
        | 'bg-blue-950'
        | 'bg-indigo-50'
        | 'bg-indigo-100'
        | 'bg-indigo-200'
        | 'bg-indigo-300'
        | 'bg-indigo-400'
        | 'bg-indigo-500'
        | 'bg-indigo-600'
        | 'bg-indigo-700'
        | 'bg-indigo-800'
        | 'bg-indigo-900'
        | 'bg-indigo-950'
        | 'bg-violet-50'
        | 'bg-violet-100'
        | 'bg-violet-200'
        | 'bg-violet-300'
        | 'bg-violet-400'
        | 'bg-violet-500'
        | 'bg-violet-600'
        | 'bg-violet-700'
        | 'bg-violet-800'
        | 'bg-violet-900'
        | 'bg-violet-950'
        | 'bg-purple-50'
        | 'bg-purple-100'
        | 'bg-purple-200'
        | 'bg-purple-300'
        | 'bg-purple-400'
        | 'bg-purple-500'
        | 'bg-purple-600'
        | 'bg-purple-700'
        | 'bg-purple-800'
        | 'bg-purple-900'
        | 'bg-purple-950'
        | 'bg-fuchsia-50'
        | 'bg-fuchsia-100'
        | 'bg-fuchsia-200'
        | 'bg-fuchsia-300'
        | 'bg-fuchsia-400'
        | 'bg-fuchsia-500'
        | 'bg-fuchsia-600'
        | 'bg-fuchsia-700'
        | 'bg-fuchsia-800'
        | 'bg-fuchsia-900'
        | 'bg-fuchsia-950'
        | 'bg-pink-50'
        | 'bg-pink-100'
        | 'bg-pink-200'
        | 'bg-pink-300'
        | 'bg-pink-400'
        | 'bg-pink-500'
        | 'bg-pink-600'
        | 'bg-pink-700'
        | 'bg-pink-800'
        | 'bg-pink-900'
        | 'bg-pink-950'
        | 'bg-rose-50'
        | 'bg-rose-100'
        | 'bg-rose-200'
        | 'bg-rose-300'
        | 'bg-rose-400'
        | 'bg-rose-500'
        | 'bg-rose-600'
        | 'bg-rose-700'
        | 'bg-rose-800'
        | 'bg-rose-900'
        | 'bg-rose-950'
      )
    | null;
  backgroundMedia?: (string | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        fontFamily?: ('urbanist' | 'inter' | 'ubuntu' | 'jost') | null;
        richTextClasses?: string | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          appearance?: ('default' | 'outline' | 'ghost' | 'secondary') | null;
        };
        image?: (string | null) | Media;
        addVerticalCTA?: boolean | null;
        verticalCTA?: {
          subtitle?: string | null;
          title?: string | null;
          titleColour?:
            | (
                | 'text-inherit'
                | 'text-current'
                | 'text-transparent'
                | 'text-black'
                | 'text-white'
                | 'text-slate-50'
                | 'text-slate-100'
                | 'text-slate-200'
                | 'text-slate-300'
                | 'text-slate-400'
                | 'text-slate-500'
                | 'text-slate-600'
                | 'text-slate-700'
                | 'text-slate-800'
                | 'text-slate-900'
                | 'text-slate-950'
                | 'text-gray-50'
                | 'text-gray-100'
                | 'text-gray-200'
                | 'text-gray-300'
                | 'text-gray-400'
                | 'text-gray-500'
                | 'text-gray-600'
                | 'text-gray-700'
                | 'text-gray-800'
                | 'text-gray-900'
                | 'text-gray-950'
                | 'text-zinc-50'
                | 'text-zinc-100'
                | 'text-zinc-200'
                | 'text-zinc-300'
                | 'text-zinc-400'
                | 'text-zinc-500'
                | 'text-zinc-600'
                | 'text-zinc-700'
                | 'text-zinc-800'
                | 'text-zinc-900'
                | 'text-zinc-950'
                | 'text-neutral-50'
                | 'text-neutral-100'
                | 'text-neutral-200'
                | 'text-neutral-300'
                | 'text-neutral-400'
                | 'text-neutral-500'
                | 'text-neutral-600'
                | 'text-neutral-700'
                | 'text-neutral-800'
                | 'text-neutral-900'
                | 'text-neutral-950'
                | 'text-stone-50'
                | 'text-stone-100'
                | 'text-stone-200'
                | 'text-stone-300'
                | 'text-stone-400'
                | 'text-stone-500'
                | 'text-stone-600'
                | 'text-stone-700'
                | 'text-stone-800'
                | 'text-stone-900'
                | 'text-stone-950'
                | 'text-red-50'
                | 'text-red-100'
                | 'text-red-200'
                | 'text-red-300'
                | 'text-red-400'
                | 'text-red-500'
                | 'text-red-600'
                | 'text-red-700'
                | 'text-red-800'
                | 'text-red-900'
                | 'text-red-950'
                | 'text-orange-50'
                | 'text-orange-100'
                | 'text-orange-200'
                | 'text-orange-300'
                | 'text-orange-400'
                | 'text-orange-500'
                | 'text-orange-600'
                | 'text-orange-700'
                | 'text-orange-800'
                | 'text-orange-900'
                | 'text-orange-950'
                | 'text-amber-50'
                | 'text-amber-100'
                | 'text-amber-200'
                | 'text-amber-300'
                | 'text-amber-400'
                | 'text-amber-500'
                | 'text-amber-600'
                | 'text-amber-700'
                | 'text-amber-800'
                | 'text-amber-900'
                | 'text-amber-950'
                | 'text-yellow-50'
                | 'text-yellow-100'
                | 'text-yellow-200'
                | 'text-yellow-300'
                | 'text-yellow-400'
                | 'text-yellow-500'
                | 'text-yellow-600'
                | 'text-yellow-700'
                | 'text-yellow-800'
                | 'text-yellow-900'
                | 'text-yellow-950'
                | 'text-lime-50'
                | 'text-lime-100'
                | 'text-lime-200'
                | 'text-lime-300'
                | 'text-lime-400'
                | 'text-lime-500'
                | 'text-lime-600'
                | 'text-lime-700'
                | 'text-lime-800'
                | 'text-lime-900'
                | 'text-lime-950'
                | 'text-green-50'
                | 'text-green-100'
                | 'text-green-200'
                | 'text-green-300'
                | 'text-green-400'
                | 'text-green-500'
                | 'text-green-600'
                | 'text-green-700'
                | 'text-green-800'
                | 'text-green-900'
                | 'text-green-950'
                | 'text-emerald-50'
                | 'text-emerald-100'
                | 'text-emerald-200'
                | 'text-emerald-300'
                | 'text-emerald-400'
                | 'text-emerald-500'
                | 'text-emerald-600'
                | 'text-emerald-700'
                | 'text-emerald-800'
                | 'text-emerald-900'
                | 'text-emerald-950'
                | 'text-teal-50'
                | 'text-teal-100'
                | 'text-teal-200'
                | 'text-teal-300'
                | 'text-teal-400'
                | 'text-teal-500'
                | 'text-teal-600'
                | 'text-teal-700'
                | 'text-teal-800'
                | 'text-teal-900'
                | 'text-teal-950'
                | 'text-cyan-50'
                | 'text-cyan-100'
                | 'text-cyan-200'
                | 'text-cyan-300'
                | 'text-cyan-400'
                | 'text-cyan-500'
                | 'text-cyan-600'
                | 'text-cyan-700'
                | 'text-cyan-800'
                | 'text-cyan-900'
                | 'text-cyan-950'
                | 'text-sky-50'
                | 'text-sky-100'
                | 'text-sky-200'
                | 'text-sky-300'
                | 'text-sky-400'
                | 'text-sky-500'
                | 'text-sky-600'
                | 'text-sky-700'
                | 'text-sky-800'
                | 'text-sky-900'
                | 'text-sky-950'
                | 'text-blue-50'
                | 'text-blue-100'
                | 'text-blue-200'
                | 'text-blue-300'
                | 'text-blue-400'
                | 'text-blue-500'
                | 'text-blue-600'
                | 'text-blue-700'
                | 'text-blue-800'
                | 'text-blue-900'
                | 'text-blue-950'
                | 'text-indigo-50'
                | 'text-indigo-100'
                | 'text-indigo-200'
                | 'text-indigo-300'
                | 'text-indigo-400'
                | 'text-indigo-500'
                | 'text-indigo-600'
                | 'text-indigo-700'
                | 'text-indigo-800'
                | 'text-indigo-900'
                | 'text-indigo-950'
                | 'text-violet-50'
                | 'text-violet-100'
                | 'text-violet-200'
                | 'text-violet-300'
                | 'text-violet-400'
                | 'text-violet-500'
                | 'text-violet-600'
                | 'text-violet-700'
                | 'text-violet-800'
                | 'text-violet-900'
                | 'text-violet-950'
                | 'text-purple-50'
                | 'text-purple-100'
                | 'text-purple-200'
                | 'text-purple-300'
                | 'text-purple-400'
                | 'text-purple-500'
                | 'text-purple-600'
                | 'text-purple-700'
                | 'text-purple-800'
                | 'text-purple-900'
                | 'text-purple-950'
                | 'text-fuchsia-50'
                | 'text-fuchsia-100'
                | 'text-fuchsia-200'
                | 'text-fuchsia-300'
                | 'text-fuchsia-400'
                | 'text-fuchsia-500'
                | 'text-fuchsia-600'
                | 'text-fuchsia-700'
                | 'text-fuchsia-800'
                | 'text-fuchsia-900'
                | 'text-fuchsia-950'
                | 'text-pink-50'
                | 'text-pink-100'
                | 'text-pink-200'
                | 'text-pink-300'
                | 'text-pink-400'
                | 'text-pink-500'
                | 'text-pink-600'
                | 'text-pink-700'
                | 'text-pink-800'
                | 'text-pink-900'
                | 'text-pink-950'
                | 'text-rose-50'
                | 'text-rose-100'
                | 'text-rose-200'
                | 'text-rose-300'
                | 'text-rose-400'
                | 'text-rose-500'
                | 'text-rose-600'
                | 'text-rose-700'
                | 'text-rose-800'
                | 'text-rose-900'
                | 'text-rose-950'
              )
            | null;
          description?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          links?:
            | {
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  appearance?: ('default' | 'outline') | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  backgroundType?: ('color' | 'media') | null;
  sectionBackgroundColor?:
    | (
        | 'bg-inherit'
        | 'bg-current'
        | 'bg-transparent'
        | 'bg-black'
        | 'bg-white'
        | 'bg-slate-50'
        | 'bg-slate-100'
        | 'bg-slate-200'
        | 'bg-slate-300'
        | 'bg-slate-400'
        | 'bg-slate-500'
        | 'bg-slate-600'
        | 'bg-slate-700'
        | 'bg-slate-800'
        | 'bg-slate-900'
        | 'bg-slate-950'
        | 'bg-gray-50'
        | 'bg-gray-100'
        | 'bg-gray-200'
        | 'bg-gray-300'
        | 'bg-gray-400'
        | 'bg-gray-500'
        | 'bg-gray-600'
        | 'bg-gray-700'
        | 'bg-gray-800'
        | 'bg-gray-900'
        | 'bg-gray-950'
        | 'bg-zinc-50'
        | 'bg-zinc-100'
        | 'bg-zinc-200'
        | 'bg-zinc-300'
        | 'bg-zinc-400'
        | 'bg-zinc-500'
        | 'bg-zinc-600'
        | 'bg-zinc-700'
        | 'bg-zinc-800'
        | 'bg-zinc-900'
        | 'bg-zinc-950'
        | 'bg-neutral-50'
        | 'bg-neutral-100'
        | 'bg-neutral-200'
        | 'bg-neutral-300'
        | 'bg-neutral-400'
        | 'bg-neutral-500'
        | 'bg-neutral-600'
        | 'bg-neutral-700'
        | 'bg-neutral-800'
        | 'bg-neutral-900'
        | 'bg-neutral-950'
        | 'bg-stone-50'
        | 'bg-stone-100'
        | 'bg-stone-200'
        | 'bg-stone-300'
        | 'bg-stone-400'
        | 'bg-stone-500'
        | 'bg-stone-600'
        | 'bg-stone-700'
        | 'bg-stone-800'
        | 'bg-stone-900'
        | 'bg-stone-950'
        | 'bg-red-50'
        | 'bg-red-100'
        | 'bg-red-200'
        | 'bg-red-300'
        | 'bg-red-400'
        | 'bg-red-500'
        | 'bg-red-600'
        | 'bg-red-700'
        | 'bg-red-800'
        | 'bg-red-900'
        | 'bg-red-950'
        | 'bg-orange-50'
        | 'bg-orange-100'
        | 'bg-orange-200'
        | 'bg-orange-300'
        | 'bg-orange-400'
        | 'bg-orange-500'
        | 'bg-orange-600'
        | 'bg-orange-700'
        | 'bg-orange-800'
        | 'bg-orange-900'
        | 'bg-orange-950'
        | 'bg-amber-50'
        | 'bg-amber-100'
        | 'bg-amber-200'
        | 'bg-amber-300'
        | 'bg-amber-400'
        | 'bg-amber-500'
        | 'bg-amber-600'
        | 'bg-amber-700'
        | 'bg-amber-800'
        | 'bg-amber-900'
        | 'bg-amber-950'
        | 'bg-yellow-50'
        | 'bg-yellow-100'
        | 'bg-yellow-200'
        | 'bg-yellow-300'
        | 'bg-yellow-400'
        | 'bg-yellow-500'
        | 'bg-yellow-600'
        | 'bg-yellow-700'
        | 'bg-yellow-800'
        | 'bg-yellow-900'
        | 'bg-yellow-950'
        | 'bg-lime-50'
        | 'bg-lime-100'
        | 'bg-lime-200'
        | 'bg-lime-300'
        | 'bg-lime-400'
        | 'bg-lime-500'
        | 'bg-lime-600'
        | 'bg-lime-700'
        | 'bg-lime-800'
        | 'bg-lime-900'
        | 'bg-lime-950'
        | 'bg-green-50'
        | 'bg-green-100'
        | 'bg-green-200'
        | 'bg-green-300'
        | 'bg-green-400'
        | 'bg-green-500'
        | 'bg-green-600'
        | 'bg-green-700'
        | 'bg-green-800'
        | 'bg-green-900'
        | 'bg-green-950'
        | 'bg-emerald-50'
        | 'bg-emerald-100'
        | 'bg-emerald-200'
        | 'bg-emerald-300'
        | 'bg-emerald-400'
        | 'bg-emerald-500'
        | 'bg-emerald-600'
        | 'bg-emerald-700'
        | 'bg-emerald-800'
        | 'bg-emerald-900'
        | 'bg-emerald-950'
        | 'bg-teal-50'
        | 'bg-teal-100'
        | 'bg-teal-200'
        | 'bg-teal-300'
        | 'bg-teal-400'
        | 'bg-teal-500'
        | 'bg-teal-600'
        | 'bg-teal-700'
        | 'bg-teal-800'
        | 'bg-teal-900'
        | 'bg-teal-950'
        | 'bg-cyan-50'
        | 'bg-cyan-100'
        | 'bg-cyan-200'
        | 'bg-cyan-300'
        | 'bg-cyan-400'
        | 'bg-cyan-500'
        | 'bg-cyan-600'
        | 'bg-cyan-700'
        | 'bg-cyan-800'
        | 'bg-cyan-900'
        | 'bg-cyan-950'
        | 'bg-sky-50'
        | 'bg-sky-100'
        | 'bg-sky-200'
        | 'bg-sky-300'
        | 'bg-sky-400'
        | 'bg-sky-500'
        | 'bg-sky-600'
        | 'bg-sky-700'
        | 'bg-sky-800'
        | 'bg-sky-900'
        | 'bg-sky-950'
        | 'bg-blue-50'
        | 'bg-blue-100'
        | 'bg-blue-200'
        | 'bg-blue-300'
        | 'bg-blue-400'
        | 'bg-blue-500'
        | 'bg-blue-600'
        | 'bg-blue-700'
        | 'bg-blue-800'
        | 'bg-blue-900'
        | 'bg-blue-950'
        | 'bg-indigo-50'
        | 'bg-indigo-100'
        | 'bg-indigo-200'
        | 'bg-indigo-300'
        | 'bg-indigo-400'
        | 'bg-indigo-500'
        | 'bg-indigo-600'
        | 'bg-indigo-700'
        | 'bg-indigo-800'
        | 'bg-indigo-900'
        | 'bg-indigo-950'
        | 'bg-violet-50'
        | 'bg-violet-100'
        | 'bg-violet-200'
        | 'bg-violet-300'
        | 'bg-violet-400'
        | 'bg-violet-500'
        | 'bg-violet-600'
        | 'bg-violet-700'
        | 'bg-violet-800'
        | 'bg-violet-900'
        | 'bg-violet-950'
        | 'bg-purple-50'
        | 'bg-purple-100'
        | 'bg-purple-200'
        | 'bg-purple-300'
        | 'bg-purple-400'
        | 'bg-purple-500'
        | 'bg-purple-600'
        | 'bg-purple-700'
        | 'bg-purple-800'
        | 'bg-purple-900'
        | 'bg-purple-950'
        | 'bg-fuchsia-50'
        | 'bg-fuchsia-100'
        | 'bg-fuchsia-200'
        | 'bg-fuchsia-300'
        | 'bg-fuchsia-400'
        | 'bg-fuchsia-500'
        | 'bg-fuchsia-600'
        | 'bg-fuchsia-700'
        | 'bg-fuchsia-800'
        | 'bg-fuchsia-900'
        | 'bg-fuchsia-950'
        | 'bg-pink-50'
        | 'bg-pink-100'
        | 'bg-pink-200'
        | 'bg-pink-300'
        | 'bg-pink-400'
        | 'bg-pink-500'
        | 'bg-pink-600'
        | 'bg-pink-700'
        | 'bg-pink-800'
        | 'bg-pink-900'
        | 'bg-pink-950'
        | 'bg-rose-50'
        | 'bg-rose-100'
        | 'bg-rose-200'
        | 'bg-rose-300'
        | 'bg-rose-400'
        | 'bg-rose-500'
        | 'bg-rose-600'
        | 'bg-rose-700'
        | 'bg-rose-800'
        | 'bg-rose-900'
        | 'bg-rose-950'
      )
    | null;
  backgroundMedia?: (string | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BusinessSliderBlock".
 */
export interface BusinessSliderBlock {
  sliderItems: {
    title: string;
    description: string;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      label: string;
      appearance?: ('default' | 'outline' | 'ghost' | 'secondary') | null;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'bslider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HoverSliderBlock".
 */
export interface HoverSliderBlock {
  sliderTitle?: string | null;
  sliderItems: {
    id: string | null;
    title: string;
    description: string;
    link?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      label: string;
      appearance?: ('default' | 'outline' | 'ghost' | 'secondary') | null;
    };
    mediaFile: string | Media;
    bgColor?:
      | (
          | 'bg-slate-50'
          | 'bg-slate-100'
          | 'bg-gray-50'
          | 'bg-gray-100'
          | 'bg-zinc-50'
          | 'bg-zinc-100'
          | 'bg-neutral-50'
          | 'bg-neutral-100'
          | 'bg-stone-50'
          | 'bg-stone-100'
          | 'bg-red-50'
          | 'bg-red-100'
          | 'bg-orange-50'
          | 'bg-orange-100'
          | 'bg-amber-50'
          | 'bg-amber-100'
          | 'bg-yellow-50'
          | 'bg-yellow-100'
          | 'bg-lime-50'
          | 'bg-lime-100'
          | 'bg-green-50'
          | 'bg-green-100'
          | 'bg-emerald-50'
          | 'bg-emerald-100'
          | 'bg-teal-50'
          | 'bg-teal-100'
          | 'bg-cyan-50'
          | 'bg-cyan-100'
          | 'bg-sky-50'
          | 'bg-sky-100'
          | 'bg-blue-50'
          | 'bg-blue-100'
          | 'bg-indigo-50'
          | 'bg-indigo-100'
          | 'bg-violet-50'
          | 'bg-violet-100'
          | 'bg-purple-50'
          | 'bg-purple-100'
          | 'bg-fuchsia-50'
          | 'bg-fuchsia-100'
          | 'bg-pink-50'
          | 'bg-pink-100'
          | 'bg-rose-50'
          | 'bg-rose-100'
        )
      | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'hoverSlider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
        heroGraphic?: T;
        includeStoreLinks?: T;
      };
  layout?:
    | T
    | {
        archive?:
          | T
          | {
              introContent?: T;
              populateBy?: T;
              relationTo?: T;
              categories?: T;
              limit?: T;
              selectedDocs?: T;
              backgroundType?: T;
              sectionBackgroundColor?: T;
              backgroundMedia?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              richText?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              columns?:
                | T
                | {
                    size?: T;
                    richText?: T;
                    fontFamily?: T;
                    richTextClasses?: T;
                    enableLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    image?: T;
                    addVerticalCTA?: T;
                    verticalCTA?:
                      | T
                      | {
                          subtitle?: T;
                          title?: T;
                          titleColour?: T;
                          description?: T;
                          links?:
                            | T
                            | {
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      appearance?: T;
                                    };
                                id?: T;
                              };
                        };
                    id?: T;
                  };
              backgroundType?: T;
              sectionBackgroundColor?: T;
              backgroundMedia?: T;
              id?: T;
              blockName?: T;
            };
        formBlock?:
          | T
          | {
              form?: T;
              enableIntro?: T;
              introContent?: T;
              id?: T;
              blockName?: T;
            };
        mediaBlock?:
          | T
          | {
              media?: T;
              id?: T;
              blockName?: T;
            };
        bslider?:
          | T
          | {
              sliderItems?:
                | T
                | {
                    title?: T;
                    description?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        hoverSlider?:
          | T
          | {
              sliderTitle?: T;
              sliderItems?:
                | T
                | {
                    id?: T;
                    title?: T;
                    description?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    mediaFile?: T;
                    bgColor?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        title?: string | null;
        hasMegaMenu?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        megaMenuItems?:
          | {
              type?: ('link' | 'subHeading' | 'text' | 'divider') | null;
              label?: string | null;
              description?: string | null;
              link?: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null);
                url?: string | null;
                label: string;
                appearance?: ('default' | 'outline' | 'ghost' | 'secondary') | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        title?: T;
        hasMegaMenu?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        megaMenuItems?:
          | T
          | {
              type?: T;
              label?: T;
              description?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}